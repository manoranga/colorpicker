// Generated by view binder compiler. Do not edit!
package com.example.colorpickerlibs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.colorpickerlibs.R;
import com.example.colorpickerlibs.utils.common.DoubleClickEditText;
import com.example.colorpickerlibs.utils.common.DoubleTapEditTextColorPicker;
import com.example.colorpickerlibs.utils.seekbarscolorpicker.SeekbarViewMinimized;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SeekbarsPickerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final DoubleClickEditText etHexadecimal;

  @NonNull
  public final LinearLayout etHexadecimalContainer;

  @NonNull
  public final RelativeLayout hexadecimalContainer;

  @NonNull
  public final FrameLayout linearColorPickerContainer;

  @NonNull
  public final LinearLayout paletteViewTopContainer;

  @NonNull
  public final SeekBar seekBarB;

  @NonNull
  public final LinearLayout seekBarContainerView3;

  @NonNull
  public final SeekBar seekBarG;

  @NonNull
  public final SeekBar seekBarH;

  @NonNull
  public final SeekBar seekBarL;

  @NonNull
  public final SeekBar seekBarR;

  @NonNull
  public final SeekBar seekBarS;

  @NonNull
  public final RelativeLayout seekBarsPickerMinimizeContainer;

  @NonNull
  public final SeekbarViewMinimized seekBarsPickerMinimized;

  @NonNull
  public final TextView tvNameB;

  @NonNull
  public final TextView tvNameG;

  @NonNull
  public final TextView tvNameH;

  @NonNull
  public final TextView tvNameL;

  @NonNull
  public final TextView tvNameR;

  @NonNull
  public final TextView tvNameS;

  @NonNull
  public final DoubleTapEditTextColorPicker tvValueB;

  @NonNull
  public final LinearLayout tvValueBContainer;

  @NonNull
  public final DoubleTapEditTextColorPicker tvValueG;

  @NonNull
  public final LinearLayout tvValueGContainer;

  @NonNull
  public final DoubleTapEditTextColorPicker tvValueH;

  @NonNull
  public final LinearLayout tvValueHContainer;

  @NonNull
  public final DoubleTapEditTextColorPicker tvValueL;

  @NonNull
  public final LinearLayout tvValueLContainer;

  @NonNull
  public final DoubleTapEditTextColorPicker tvValueR;

  @NonNull
  public final LinearLayout tvValueRContainer;

  @NonNull
  public final DoubleTapEditTextColorPicker tvValueS;

  @NonNull
  public final LinearLayout tvValueSContainer;

  private SeekbarsPickerBinding(@NonNull ConstraintLayout rootView,
      @NonNull DoubleClickEditText etHexadecimal, @NonNull LinearLayout etHexadecimalContainer,
      @NonNull RelativeLayout hexadecimalContainer, @NonNull FrameLayout linearColorPickerContainer,
      @NonNull LinearLayout paletteViewTopContainer, @NonNull SeekBar seekBarB,
      @NonNull LinearLayout seekBarContainerView3, @NonNull SeekBar seekBarG,
      @NonNull SeekBar seekBarH, @NonNull SeekBar seekBarL, @NonNull SeekBar seekBarR,
      @NonNull SeekBar seekBarS, @NonNull RelativeLayout seekBarsPickerMinimizeContainer,
      @NonNull SeekbarViewMinimized seekBarsPickerMinimized, @NonNull TextView tvNameB,
      @NonNull TextView tvNameG, @NonNull TextView tvNameH, @NonNull TextView tvNameL,
      @NonNull TextView tvNameR, @NonNull TextView tvNameS,
      @NonNull DoubleTapEditTextColorPicker tvValueB, @NonNull LinearLayout tvValueBContainer,
      @NonNull DoubleTapEditTextColorPicker tvValueG, @NonNull LinearLayout tvValueGContainer,
      @NonNull DoubleTapEditTextColorPicker tvValueH, @NonNull LinearLayout tvValueHContainer,
      @NonNull DoubleTapEditTextColorPicker tvValueL, @NonNull LinearLayout tvValueLContainer,
      @NonNull DoubleTapEditTextColorPicker tvValueR, @NonNull LinearLayout tvValueRContainer,
      @NonNull DoubleTapEditTextColorPicker tvValueS, @NonNull LinearLayout tvValueSContainer) {
    this.rootView = rootView;
    this.etHexadecimal = etHexadecimal;
    this.etHexadecimalContainer = etHexadecimalContainer;
    this.hexadecimalContainer = hexadecimalContainer;
    this.linearColorPickerContainer = linearColorPickerContainer;
    this.paletteViewTopContainer = paletteViewTopContainer;
    this.seekBarB = seekBarB;
    this.seekBarContainerView3 = seekBarContainerView3;
    this.seekBarG = seekBarG;
    this.seekBarH = seekBarH;
    this.seekBarL = seekBarL;
    this.seekBarR = seekBarR;
    this.seekBarS = seekBarS;
    this.seekBarsPickerMinimizeContainer = seekBarsPickerMinimizeContainer;
    this.seekBarsPickerMinimized = seekBarsPickerMinimized;
    this.tvNameB = tvNameB;
    this.tvNameG = tvNameG;
    this.tvNameH = tvNameH;
    this.tvNameL = tvNameL;
    this.tvNameR = tvNameR;
    this.tvNameS = tvNameS;
    this.tvValueB = tvValueB;
    this.tvValueBContainer = tvValueBContainer;
    this.tvValueG = tvValueG;
    this.tvValueGContainer = tvValueGContainer;
    this.tvValueH = tvValueH;
    this.tvValueHContainer = tvValueHContainer;
    this.tvValueL = tvValueL;
    this.tvValueLContainer = tvValueLContainer;
    this.tvValueR = tvValueR;
    this.tvValueRContainer = tvValueRContainer;
    this.tvValueS = tvValueS;
    this.tvValueSContainer = tvValueSContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SeekbarsPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SeekbarsPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.seekbars_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SeekbarsPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etHexadecimal;
      DoubleClickEditText etHexadecimal = ViewBindings.findChildViewById(rootView, id);
      if (etHexadecimal == null) {
        break missingId;
      }

      id = R.id.etHexadecimalContainer;
      LinearLayout etHexadecimalContainer = ViewBindings.findChildViewById(rootView, id);
      if (etHexadecimalContainer == null) {
        break missingId;
      }

      id = R.id.hexadecimalContainer;
      RelativeLayout hexadecimalContainer = ViewBindings.findChildViewById(rootView, id);
      if (hexadecimalContainer == null) {
        break missingId;
      }

      id = R.id.linearColorPickerContainer;
      FrameLayout linearColorPickerContainer = ViewBindings.findChildViewById(rootView, id);
      if (linearColorPickerContainer == null) {
        break missingId;
      }

      id = R.id.paletteViewTopContainer;
      LinearLayout paletteViewTopContainer = ViewBindings.findChildViewById(rootView, id);
      if (paletteViewTopContainer == null) {
        break missingId;
      }

      id = R.id.seekBarB;
      SeekBar seekBarB = ViewBindings.findChildViewById(rootView, id);
      if (seekBarB == null) {
        break missingId;
      }

      id = R.id.seekBarContainerView3;
      LinearLayout seekBarContainerView3 = ViewBindings.findChildViewById(rootView, id);
      if (seekBarContainerView3 == null) {
        break missingId;
      }

      id = R.id.seekBarG;
      SeekBar seekBarG = ViewBindings.findChildViewById(rootView, id);
      if (seekBarG == null) {
        break missingId;
      }

      id = R.id.seekBarH;
      SeekBar seekBarH = ViewBindings.findChildViewById(rootView, id);
      if (seekBarH == null) {
        break missingId;
      }

      id = R.id.seekBarL;
      SeekBar seekBarL = ViewBindings.findChildViewById(rootView, id);
      if (seekBarL == null) {
        break missingId;
      }

      id = R.id.seekBarR;
      SeekBar seekBarR = ViewBindings.findChildViewById(rootView, id);
      if (seekBarR == null) {
        break missingId;
      }

      id = R.id.seekBarS;
      SeekBar seekBarS = ViewBindings.findChildViewById(rootView, id);
      if (seekBarS == null) {
        break missingId;
      }

      id = R.id.seekBarsPickerMinimizeContainer;
      RelativeLayout seekBarsPickerMinimizeContainer = ViewBindings.findChildViewById(rootView, id);
      if (seekBarsPickerMinimizeContainer == null) {
        break missingId;
      }

      id = R.id.seekBarsPickerMinimized;
      SeekbarViewMinimized seekBarsPickerMinimized = ViewBindings.findChildViewById(rootView, id);
      if (seekBarsPickerMinimized == null) {
        break missingId;
      }

      id = R.id.tvNameB;
      TextView tvNameB = ViewBindings.findChildViewById(rootView, id);
      if (tvNameB == null) {
        break missingId;
      }

      id = R.id.tvNameG;
      TextView tvNameG = ViewBindings.findChildViewById(rootView, id);
      if (tvNameG == null) {
        break missingId;
      }

      id = R.id.tvNameH;
      TextView tvNameH = ViewBindings.findChildViewById(rootView, id);
      if (tvNameH == null) {
        break missingId;
      }

      id = R.id.tvNameL;
      TextView tvNameL = ViewBindings.findChildViewById(rootView, id);
      if (tvNameL == null) {
        break missingId;
      }

      id = R.id.tvNameR;
      TextView tvNameR = ViewBindings.findChildViewById(rootView, id);
      if (tvNameR == null) {
        break missingId;
      }

      id = R.id.tvNameS;
      TextView tvNameS = ViewBindings.findChildViewById(rootView, id);
      if (tvNameS == null) {
        break missingId;
      }

      id = R.id.tvValueB;
      DoubleTapEditTextColorPicker tvValueB = ViewBindings.findChildViewById(rootView, id);
      if (tvValueB == null) {
        break missingId;
      }

      id = R.id.tvValueBContainer;
      LinearLayout tvValueBContainer = ViewBindings.findChildViewById(rootView, id);
      if (tvValueBContainer == null) {
        break missingId;
      }

      id = R.id.tvValueG;
      DoubleTapEditTextColorPicker tvValueG = ViewBindings.findChildViewById(rootView, id);
      if (tvValueG == null) {
        break missingId;
      }

      id = R.id.tvValueGContainer;
      LinearLayout tvValueGContainer = ViewBindings.findChildViewById(rootView, id);
      if (tvValueGContainer == null) {
        break missingId;
      }

      id = R.id.tvValueH;
      DoubleTapEditTextColorPicker tvValueH = ViewBindings.findChildViewById(rootView, id);
      if (tvValueH == null) {
        break missingId;
      }

      id = R.id.tvValueHContainer;
      LinearLayout tvValueHContainer = ViewBindings.findChildViewById(rootView, id);
      if (tvValueHContainer == null) {
        break missingId;
      }

      id = R.id.tvValueL;
      DoubleTapEditTextColorPicker tvValueL = ViewBindings.findChildViewById(rootView, id);
      if (tvValueL == null) {
        break missingId;
      }

      id = R.id.tvValueLContainer;
      LinearLayout tvValueLContainer = ViewBindings.findChildViewById(rootView, id);
      if (tvValueLContainer == null) {
        break missingId;
      }

      id = R.id.tvValueR;
      DoubleTapEditTextColorPicker tvValueR = ViewBindings.findChildViewById(rootView, id);
      if (tvValueR == null) {
        break missingId;
      }

      id = R.id.tvValueRContainer;
      LinearLayout tvValueRContainer = ViewBindings.findChildViewById(rootView, id);
      if (tvValueRContainer == null) {
        break missingId;
      }

      id = R.id.tvValueS;
      DoubleTapEditTextColorPicker tvValueS = ViewBindings.findChildViewById(rootView, id);
      if (tvValueS == null) {
        break missingId;
      }

      id = R.id.tvValueSContainer;
      LinearLayout tvValueSContainer = ViewBindings.findChildViewById(rootView, id);
      if (tvValueSContainer == null) {
        break missingId;
      }

      return new SeekbarsPickerBinding((ConstraintLayout) rootView, etHexadecimal,
          etHexadecimalContainer, hexadecimalContainer, linearColorPickerContainer,
          paletteViewTopContainer, seekBarB, seekBarContainerView3, seekBarG, seekBarH, seekBarL,
          seekBarR, seekBarS, seekBarsPickerMinimizeContainer, seekBarsPickerMinimized, tvNameB,
          tvNameG, tvNameH, tvNameL, tvNameR, tvNameS, tvValueB, tvValueBContainer, tvValueG,
          tvValueGContainer, tvValueH, tvValueHContainer, tvValueL, tvValueLContainer, tvValueR,
          tvValueRContainer, tvValueS, tvValueSContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
