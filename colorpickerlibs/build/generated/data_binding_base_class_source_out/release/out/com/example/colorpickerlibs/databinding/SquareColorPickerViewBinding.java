// Generated by view binder compiler. Do not edit!
package com.example.colorpickerlibs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.colorpickerlibs.R;
import com.example.colorpickerlibs.utils.squarecolorpikcer.SquareColorPickerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SquareColorPickerViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView colorPaletteRecyclerView;

  @NonNull
  public final LinearLayout recentColorsView;

  @NonNull
  public final SquareColorPickerView squareColorPickerView;

  @NonNull
  public final TextView tvColorTitle;

  private SquareColorPickerViewBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView colorPaletteRecyclerView, @NonNull LinearLayout recentColorsView,
      @NonNull SquareColorPickerView squareColorPickerView, @NonNull TextView tvColorTitle) {
    this.rootView = rootView;
    this.colorPaletteRecyclerView = colorPaletteRecyclerView;
    this.recentColorsView = recentColorsView;
    this.squareColorPickerView = squareColorPickerView;
    this.tvColorTitle = tvColorTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SquareColorPickerViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SquareColorPickerViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.square_color_picker_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SquareColorPickerViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.colorPaletteRecyclerView;
      RecyclerView colorPaletteRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (colorPaletteRecyclerView == null) {
        break missingId;
      }

      id = R.id.recentColorsView;
      LinearLayout recentColorsView = ViewBindings.findChildViewById(rootView, id);
      if (recentColorsView == null) {
        break missingId;
      }

      id = R.id.squareColorPickerView;
      SquareColorPickerView squareColorPickerView = ViewBindings.findChildViewById(rootView, id);
      if (squareColorPickerView == null) {
        break missingId;
      }

      id = R.id.tvColorTitle;
      TextView tvColorTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvColorTitle == null) {
        break missingId;
      }

      return new SquareColorPickerViewBinding((LinearLayout) rootView, colorPaletteRecyclerView,
          recentColorsView, squareColorPickerView, tvColorTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
